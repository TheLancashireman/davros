/* rpi3-0based.ldscript
 *
 * Copyright David Haworth
 *
 * This file is part of davros.
 *
 * davros is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * davros is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with davros.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 *
 * The rpi's internal bootloader can load a kernel at 0
 * if you set kernel_old=1  in config.txt.
 *
 * The davros serial montor can also load an SREC file at address 0.
 * For the monitor we don't want the length to exceed 512 MiB (not that davros will ever get that big).
*/

MEMORY
{
	ram	: org = 0x0,	len = 0x20000000	/* 512 MiB */
}

SECTIONS
{
	.reset	:
	{
		*(reset)
	} > ram

    .text	:
	{
		dv_start_text = .;
		*(.text*)
		dv_end_text = .;
	} > ram

	.rodata		ALIGN(4096) :
	{
		dv_start_rodata = .;
		*(.rodata*)
		dv_end_rodata = .;
	} > ram

	.c0_pgtbl	ALIGN(16384) :
	{
		dv_start_pgtbl_c0 = .;
		*(dv_pagetable)
		dv_end_pgtbl_c0 = .;
	} > ram

	.c0_stack	ALIGN(4096)	:
	{
		dv_start_stack_c0 = .;
		*(dv_stack)
		dv_end_stack_c0 = .;
	} > ram

	.c0_data	ALIGN(4096)	:
	{
		dv_start_data_c0 = .;
		*(.data*)
		dv_end_data_c0 = .;
	} > ram

    .c0_bss		ALIGN(16)	:
	{
		dv_start_bss_c0 = .;
		*(.bss*)
		dv_end_bss_c0 = .;
	} > ram

	dv_c0_pages = ALIGN(4096);
	dv_end_ram = 0x3e000000;			/* Assumes GPU memory of 32 MB */

  /* These sections appear to be generated by the compiler.
   * We doesn't use them.
  */
    .stack              : { *(.stack)       }

  /* The remainder are DWARF-2 debug sections. They contain
   * ELF relocations and must be located at zero.
  */
    . = 0x0;
    .debug_aranges      : { *(.debug_aranges)   }
    . = 0x0;
    .debug_pubnames     : { *(.debug_pubnames)  }
    . = 0x0;
    .debug_info         : { *(.debug_info)  }
    . = 0x0;
    .debug_abbrev       : { *(.debug_abbrev)    }
    . = 0x0;
    .debug_line         : { *(.debug_line)  }
}
